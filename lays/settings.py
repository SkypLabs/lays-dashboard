"""
Django settings for lays project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 's23yg3-2vw9dbp*p5r-tl@)rmzvrg5fh=-7@q$hhmvn^*rj3$s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'pipeline',
	'tastypie',
	'dashboard',
)

MIDDLEWARE_CLASSES = (
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
	'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'lays.urls'

LOGIN_URL = '/admin/login'

LOGOUT_URL = '/admin/logout'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, 'dashboard/templates')],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'lays.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
	}
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'fr-FR'

TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

STATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'
PIPELINE_CSS_COMPRESSOR = None
PIPELINE_JS_COMPRESSOR = None

STATICFILES_FINDERS = (
	'django.contrib.staticfiles.finders.FileSystemFinder',
	'django.contrib.staticfiles.finders.AppDirectoriesFinder',
	'pipeline.finders.PipelineFinder',
)

STATICFILES_DIRS = (
	os.path.join(BASE_DIR, 'dashboard/static/bower_components'),
)

PIPELINE_CSS = {
	'default': {
		'source_filenames': (
			'bootstrap/dist/css/bootstrap.css',
		),
		'output_filename': 'css/libs.min.css',
	},
	'device_resources': {
		'source_filenames': (
			'bootstrap/dist/css/bootstrap.css',
			'bootstrap-switch/dist/css/bootstrap3/bootstrap-switch.css',
			'seiyria-bootstrap-slider/css/bootstrap-slider.css',
		),
		'output_filename': 'css/libs.min.css',
	},
}

PIPELINE_JS = {
	'default': {
		'source_filenames': (
			'jquery/dist/jquery.js',
			'bootstrap/dist/js/bootstrap.js',
		),
		'output_filename': 'js/default.min.js',
	},
	'charts': {
		'source_filenames': (
			'jquery/dist/jquery.js',
			'bootstrap/dist/js/bootstrap.js',
			'highcharts-release/highcharts.js',
		),
		'output_filename': 'js/charts.min.js',
	},
	'device_resources': {
		'source_filenames': (
			'jquery/dist/jquery.js',
			'bootstrap/dist/js/bootstrap.js',
			'bootstrap-switch/dist/js/bootstrap-switch.js',
			'seiyria-bootstrap-slider/js/bootstrap-slider.js',
		),
		'output_filename': 'js/default.min.js',
	},
}

# Tastypie settings

TASTYPIE_DEFAULT_FORMATS = ['json']
TASTYPIE_DATETIME_FORMATTING = 'iso-8601'

# AMQP server settings

AMQP_HOST = os.getenv('AMQPSERVER_PORT_5672_TCP_ADDR', 'localhost')
